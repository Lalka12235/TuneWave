services:
  #postgres:
  #  image: postgres:latest
  #  container_name: postgres-db
  #  env_file:
  #    - .env
  #  environment:
  #    - POSTGRES_USER=${DB_USER}  
  #    - POSTGRES_PASSWORD=${DB_PASS}
  #    - POSTGRES_DB=${DB_NAME}
  #  ports:
  #    - "5432:5432"
  #  networks:
  #    - tunewave_network
  #  volumes:
  #    - postgre_vol:/var/lib/postgresql/data 
  #  healthcheck:
  #    test: ["CMD-SHELL", "pg_isready"]
  #    interval: 10s
  #    timeout: 5s
  #    retries: 5

  #backend:
  #  build:
  #    dockerfile: Dockerfile
  #    context: .
  #  container_name: api
  #  env_file:
  #    - .env
  #  ports:
  #    - "8000:8000"
  #  environment:
  #    APP_CONFIG_DB_URL: postgresql+psycopg://user:password@postgres:5432/db_name
  #  networks:
  #    - tunewave_network
  #  depends_on:
  #    - postgres
  #    - rabbitmq
  #    - redis
  #    - celery-worker
    
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672" 
      - "15672:15672" 
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tunewave_network

  redis:
    image: redis:7.0-alpine
    hostname: redis
    ports:
      - "6379:6379" 
    networks:
      - tunewave_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A infrastructure.celery.worker worker --loglevel=INFO -P eventlet
    environment:
      RABBITMQ_BROKER_URL: ${RABBITMQ_BROKER_URL}
      REDIS_URL: ${REDIS_URL}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL}
  networks:
    - tunewave_network
  depends_on:
    - redis


networks:
  tunewave_network:

volumes:
  postgre_vol: