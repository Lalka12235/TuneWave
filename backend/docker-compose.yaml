services:
  postgres:
    image: postgres:latest
    container_name: postgres-db
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}  
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    networks:
      - tunewave_network
    volumes:
      - postgre_vol:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      dockerfile: Dockerfile
      context: .
    container_name: api
    env_file:
      - .env
    environment:
      APP_CONFIG_DB_URL: postgresql+psycopg://user:password@postgres:5432/db_name
      REDIS_HOST: redis # Имя сервиса Redis
      REDIS_PORT: 6379
      RABBITMQ_BROKER_URL: amqp://guest:guest@rabbitmq:5672// # Для Celery-клиента в FastAPI
      # ... остальные переменные окружения, такие как JWT, Google, Spotify, SMTP ...
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}
      SPOTIFY_CLIENT_ID: ${SPOTIFY_CLIENT_ID}
      SPOTIFY_CLIENT_SECRET: ${SPOTIFY_CLIENT_SECRET}
      SPOTIFY_REDIRECT_URI: ${SPOTIFY_REDIRECT_URI}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL}
    networks:
      - tunewave_network
    depends_on:
      postgres:
        condition: service_healthy 
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672" 
      - "15672:15672" 
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_BROKER_URL: amqp://guest:guest@rabbitmq:5672//
      REDIS_HOST: redis # Для Celery backend
      REDIS_PORT: 6379
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tunewave_network

  redis:
    image: redis:7.0-alpine
    hostname: redis
    ports:
      - "6379:6379" 
    networks:
      - tunewave_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  celery-worker:
    build:
      context: .
      dockerfile: ./infrastructure/celery/Dockerfile
    command: celery -A infrastructure.celery worker --loglevel=INFO -P eventlet
    env_file:
      - .env
    environment:
      RABBITMQ_BROKER_URL: ${RABBITMQ_BROKER_URL}
      REDIS_URL: ${REDIS_URL}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL}
    networks:
    - tunewave_network
    depends_on:
    - redis
  
  #nginx:
  #    restart: always
  #    build:
  #        context: .
  #        dockerfile: ./infrastructure/nginx/Dockerfile
  #    ports:
  #      - 80:80
  #    networks:
  #    - tunewave_network
  #    depends_on:
  #      backend:
  #        condition: service_healthy


networks:
  tunewave_network:

volumes:
  postgre_vol: