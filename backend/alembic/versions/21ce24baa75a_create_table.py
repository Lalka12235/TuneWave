"""create table

Revision ID: 21ce24baa75a
Revises: 
Create Date: 2025-07-21 22:56:28.349118

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '21ce24baa75a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tracks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('spotify_track_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('artist', sa.String(), nullable=False),
    sa.Column('album', sa.String(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('spotify_track_url', sa.String(), nullable=True),
    sa.Column('spotify_uri', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('spotify_uri')
    )
    op.create_index(op.f('ix_tracks_spotify_track_id'), 'tracks', ['spotify_track_id'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('is_email_verified', sa.Boolean(), nullable=False),
    sa.Column('google_id', sa.String(), nullable=True),
    sa.Column('google_image_url', sa.String(), nullable=True),
    sa.Column('spotify_id', sa.String(), nullable=True),
    sa.Column('spotify_profile_url', sa.String(), nullable=True),
    sa.Column('spotify_image_url', sa.String(), nullable=True),
    sa.Column('spotify_access_token', sa.String(), nullable=True),
    sa.Column('spotify_refresh_token', sa.String(), nullable=True),
    sa.Column('spotify_token_expires_at', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('google_id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('spotify_id')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('favorite_tracks',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('track_id', sa.UUID(), nullable=False),
    sa.Column('added_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'track_id')
    )
    op.create_table('rooms',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('max_members', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('current_track_id', sa.UUID(), nullable=True),
    sa.Column('current_track_position_ms', sa.Integer(), nullable=True),
    sa.Column('is_playing', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['current_track_id'], ['tracks.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('member_room_association',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('room_id', sa.UUID(), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'room_id')
    )
    op.create_table('room_track_association',
    sa.Column('room_id', sa.UUID(), nullable=False),
    sa.Column('track_id', sa.UUID(), nullable=False),
    sa.Column('order_in_queue', sa.Integer(), nullable=True),
    sa.Column('added_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('addded_by_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], ),
    sa.PrimaryKeyConstraint('room_id', 'track_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('room_track_association')
    op.drop_table('member_room_association')
    op.drop_table('rooms')
    op.drop_table('favorite_tracks')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tracks_spotify_track_id'), table_name='tracks')
    op.drop_table('tracks')
    # ### end Alembic commands ###
