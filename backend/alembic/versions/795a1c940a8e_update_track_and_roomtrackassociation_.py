"""Update Track and RoomTrackAssociation models for playlist queue

Revision ID: 795a1c940a8e
Revises: 3cd48d4d200a
Create Date: 2025-08-18 11:33:12.595499

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '795a1c940a8e'
down_revision: Union[str, None] = '3cd48d4d200a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'notifications', ['id'])
    op.drop_constraint('room_track_associations_track_id_fkey', 'room_track_associations', type_='foreignkey')
    op.drop_constraint('room_track_associations_room_id_fkey', 'room_track_associations', type_='foreignkey')
    op.create_foreign_key(None, 'room_track_associations', 'rooms', ['room_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'room_track_associations', 'tracks', ['track_id'], ['id'], ondelete='CASCADE')
    op.add_column('tracks', sa.Column('spotify_id', sa.String(), nullable=False, comment="Уникальный ID трека в Spotify (например, '4o0c16W1T6nFz3E6w7P9Xl')"))
    op.add_column('tracks', sa.Column('artist_names', sa.JSON(), nullable=False, comment='Список имен артистов, связанных с треком (хранится как JSON-массив).'))
    op.add_column('tracks', sa.Column('album_name', sa.String(), nullable=False, comment='Название альбома, к которому относится трек.'))
    op.add_column('tracks', sa.Column('album_cover_url', sa.String(), nullable=True, comment='URL обложки альбома (предпочтительно высокого качества).'))
    op.add_column('tracks', sa.Column('is_playable', sa.Boolean(), nullable=False, comment='Указывает, доступен ли трек для воспроизведения (из Spotify API).'))
    op.add_column('tracks', sa.Column('last_synced_at', sa.DateTime(timezone=True), nullable=False, comment='Время последней синхронизации метаданных трека с Spotify.'))
    op.add_column('tracks', sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, comment='Время добавления записи трека в локальную базу данных.'))
    op.alter_column('tracks', 'spotify_uri',
               existing_type=sa.VARCHAR(),
               comment="Spotify URI трека (например, 'spotify:track:4o0c16W1T6nFz3E6w7P9Xl')",
               existing_nullable=False)
    op.alter_column('tracks', 'title',
               existing_type=sa.VARCHAR(),
               comment='Название трека.',
               existing_nullable=False)
    op.alter_column('tracks', 'duration_ms',
               existing_type=sa.INTEGER(),
               nullable=False,
               comment='Длительность трека в миллисекундах.')
    op.alter_column('tracks', 'spotify_track_url',
               existing_type=sa.VARCHAR(),
               comment='URL трека на Spotify (из external_urls.spotify).',
               existing_nullable=True)
    op.drop_index('ix_tracks_spotify_track_id', table_name='tracks')
    op.create_index(op.f('ix_tracks_spotify_id'), 'tracks', ['spotify_id'], unique=True)
    op.drop_column('tracks', 'album')
    op.drop_column('tracks', 'artist')
    op.drop_column('tracks', 'spotify_track_id')
    op.drop_column('tracks', 'image_url')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tracks', sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('tracks', sa.Column('spotify_track_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('tracks', sa.Column('artist', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('tracks', sa.Column('album', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_tracks_spotify_id'), table_name='tracks')
    op.create_index('ix_tracks_spotify_track_id', 'tracks', ['spotify_track_id'], unique=True)
    op.alter_column('tracks', 'spotify_track_url',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='URL трека на Spotify (из external_urls.spotify).',
               existing_nullable=True)
    op.alter_column('tracks', 'duration_ms',
               existing_type=sa.INTEGER(),
               nullable=True,
               comment=None,
               existing_comment='Длительность трека в миллисекундах.')
    op.alter_column('tracks', 'title',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Название трека.',
               existing_nullable=False)
    op.alter_column('tracks', 'spotify_uri',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment="Spotify URI трека (например, 'spotify:track:4o0c16W1T6nFz3E6w7P9Xl')",
               existing_nullable=False)
    op.drop_column('tracks', 'created_at')
    op.drop_column('tracks', 'last_synced_at')
    op.drop_column('tracks', 'is_playable')
    op.drop_column('tracks', 'album_cover_url')
    op.drop_column('tracks', 'album_name')
    op.drop_column('tracks', 'artist_names')
    op.drop_column('tracks', 'spotify_id')
    op.drop_constraint(None, 'room_track_associations', type_='foreignkey')
    op.drop_constraint(None, 'room_track_associations', type_='foreignkey')
    op.create_foreign_key('room_track_associations_room_id_fkey', 'room_track_associations', 'rooms', ['room_id'], ['id'])
    op.create_foreign_key('room_track_associations_track_id_fkey', 'room_track_associations', 'tracks', ['track_id'], ['id'])
    op.drop_constraint(None, 'notifications', type_='unique')
    # ### end Alembic commands ###
